// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuestsSystem.Data;

#nullable disable

namespace QuestsSystem.Migrations
{
    [DbContext(typeof(QuestContext))]
    [Migration("20230222230605_MigracjaOne")]
    partial class MigracjaOne
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QuestsSystem.Models.Mob", b =>
                {
                    b.Property<int>("MobID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MobID"));

                    b.Property<int>("DamageType")
                        .HasColumnType("int");

                    b.Property<int>("Difficulty")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("MagicResistance")
                        .HasColumnType("int");

                    b.Property<int>("MonsterType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhysicalResistance")
                        .HasColumnType("int");

                    b.Property<int?>("SpawnBiome")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("MobID");

                    b.ToTable("Mob");
                });

            modelBuilder.Entity("QuestsSystem.Models.Npc", b =>
                {
                    b.Property<int>("NpcID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NpcID"));

                    b.Property<bool>("IsDynamic")
                        .HasColumnType("bit");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Profession")
                        .HasColumnType("int");

                    b.Property<int>("Race")
                        .HasColumnType("int");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("NpcID");

                    b.ToTable("Npc");
                });

            modelBuilder.Entity("QuestsSystem.Models.NpcRequirementConnector", b =>
                {
                    b.Property<int>("NpcRequirementConnectorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NpcRequirementConnectorID"));

                    b.Property<int>("NpcID")
                        .HasColumnType("int");

                    b.Property<int>("RequirementID")
                        .HasColumnType("int");

                    b.HasKey("NpcRequirementConnectorID");

                    b.HasIndex("NpcID");

                    b.HasIndex("RequirementID");

                    b.ToTable("NpcRequirementConnector");
                });

            modelBuilder.Entity("QuestsSystem.Models.Quest", b =>
                {
                    b.Property<int>("QuestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsChainQuest")
                        .HasColumnType("bit");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int?>("Location")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rarity")
                        .HasColumnType("int");

                    b.HasKey("QuestID");

                    b.ToTable("Quest");
                });

            modelBuilder.Entity("QuestsSystem.Models.QuestRewardConnector", b =>
                {
                    b.Property<int>("QuestRewardConnectorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestRewardConnectorID"));

                    b.Property<int>("NpcID")
                        .HasColumnType("int");

                    b.Property<int>("QuestID")
                        .HasColumnType("int");

                    b.Property<int>("RewardID")
                        .HasColumnType("int");

                    b.HasKey("QuestRewardConnectorID");

                    b.HasIndex("QuestID");

                    b.HasIndex("RewardID");

                    b.ToTable("QuestRewardConnector");
                });

            modelBuilder.Entity("QuestsSystem.Models.Requirement", b =>
                {
                    b.Property<int>("RequirementID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequirementID"));

                    b.Property<string>("RequirementName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequirementType")
                        .HasColumnType("int");

                    b.HasKey("RequirementID");

                    b.ToTable("Requirement");
                });

            modelBuilder.Entity("QuestsSystem.Models.Reward", b =>
                {
                    b.Property<int>("RewardID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RewardID"));

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("RewardName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("rewardType")
                        .HasColumnType("int");

                    b.HasKey("RewardID");

                    b.ToTable("Reward");
                });

            modelBuilder.Entity("QuestsSystem.Models.NpcRequirementConnector", b =>
                {
                    b.HasOne("QuestsSystem.Models.Npc", "NPC")
                        .WithMany("AdditionalRequirements")
                        .HasForeignKey("NpcID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuestsSystem.Models.Requirement", "Requirement")
                        .WithMany()
                        .HasForeignKey("RequirementID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NPC");

                    b.Navigation("Requirement");
                });

            modelBuilder.Entity("QuestsSystem.Models.QuestRewardConnector", b =>
                {
                    b.HasOne("QuestsSystem.Models.Quest", "Quest")
                        .WithMany("Reward")
                        .HasForeignKey("QuestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuestsSystem.Models.Reward", "Reward")
                        .WithMany()
                        .HasForeignKey("RewardID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quest");

                    b.Navigation("Reward");
                });

            modelBuilder.Entity("QuestsSystem.Models.Npc", b =>
                {
                    b.Navigation("AdditionalRequirements");
                });

            modelBuilder.Entity("QuestsSystem.Models.Quest", b =>
                {
                    b.Navigation("Reward");
                });
#pragma warning restore 612, 618
        }
    }
}
